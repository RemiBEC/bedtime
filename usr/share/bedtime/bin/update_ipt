#!/usr/bin/perl

# This script is the business end of the application
# It writes iptables commands filtering MAC addresses
# with start and stop times from the rules
# It works well for iptables 1.4.11 and later
# but is commonly out by an hour on older veraions
# prompting the mvoe from CentOS 6 to Fedora

BEGIN {push @INC,'/usr/share/bedtime/bin'}

use BedtimeDB qw(get_val);
use DBI;
use strict;
use warnings;

# Find out how borked iptables is about timezones
my $iptv = `iptables -V`;
$iptv =~ s/^\s*iptables\s+v//;
my ($maj,$min,$rel) = split(/\./,$iptv);
my $bork = (($maj <= 1) && ($min <= 4) && ($rel <= 10)) ? 1 : 0;

# Connect to the database
my $dbh = &BedtimeDB::dbconn; my $sth;

# Get my IP address, weekend mask and timezone
my $myip = get_val('myip');
my $wknd = get_val('weekend');
my $town = get_val('town');
$town = 'GMT' if ($town eq '');

# Is today a weekend night?
my $day = `date +"%u"`; chomp $day;
my $mask = ((1 << (8-$day)) & $wknd) ? $wknd : 254 ^ $wknd;

# Or is tomorrow a holiday?
$sth = $dbh->prepare(
   "select * from holiday
    where curdate() + interval 1 day >= start
    and   curdate() + interval 1 day <= stop");
$sth->execute();
$mask = $wknd if $sth->rows > 0;

# Flush all FORWARD and PREROUTING iptables
my $tables = "iptables -F FORWARD\niptables -t nat -F PREROUTING\n";
my $sql;

# Get the bedtime rules
if ($bork) {
   $sth=$dbh->prepare(
   "select lpad(hex(device.mac),12,'0') as mac,
   if (rules.night<'12:00:00',
      date_format(concat_ws(' ',curdate()+interval 1 day, rules.night),'%Y-%m-%dT%T'),
      date_format(concat_ws(' ',curdate(),rules.night),'%Y-%m-%dT%T'))
   as start,
   date_format(concat_ws(' ',curdate()+interval 1 day, rules.morning),'%Y-%m-%dT%T')
   as stop
   from rules inner join device on rules.user_id=device.user_id
   where days=$mask");
} else {
   $sth=$dbh->prepare(
   "select lpad(hex(device.mac),12,'0') as mac,
   if (rules.night<'12:00:00',
      date_format(convert_tz(concat_ws(' ',curdate()+interval 1 day, rules.night),'$town','UTC'),'%Y-%m-%dT%T'),
      date_format(convert_tz(concat_ws(' ',curdate(),rules.night),'$town','UTC'),'%Y-%m-%dT%T'))
   as start,
   date_format(convert_tz(concat_ws(' ',curdate()+interval 1 day, rules.morning),'$town','UTC'),'%Y-%m-%dT%T')
   as stop 
   from rules inner join device on rules.user_id=device.user_id
   where days=$mask");
}
$sth->execute();

# Add the rule times and MAC to the forward and prerouting chains
while (my @row = $sth->fetchrow_array) {
   my ($mac, $start, $stop) = (@row);
   $mac = join(':',( lc($mac) =~ m/../g ));
   $tables .= "iptables -A FORWARD -m mac --mac-source $mac ";
   $tables .= "-m time --datestart $start --datestop $stop ";
   $tables .= "--utc " unless ($bork);
   $tables .= "-j REJECT\n";
   $tables .= "iptables -t nat -A PREROUTING -m mac --mac-source $mac ";
   $tables .= "-m time --datestart $start --datestop $stop ";
   $tables .= "--utc " unless ($bork);
   $tables .= "-p tcp ! -d $myip --dport 80 -j REDIRECT --to-ports 3128\n"; 
}

# Same for yesterday (so rules won't do a Cinderella)
if ($bork) {
   $sth = $dbh->prepare(
   "select lpad(hex(device.mac),12,'0') as mac,
   if (rules.night<'12:00:00',
      date_format(concat_ws(' ',curdate(), rules.night),'%Y-%m-%dT%T'),
      date_format(concat_ws(' ',curdate()-interval 1 day,rules.night),'%Y-%m-%dT%T'))
   as start,
   date_format(concat_ws(' ',curdate()+interval 1 day, rules.morning),'%Y-%m-%dT%T')
   as stop
   from rules inner join device on rules.user_id=device.user_id
   where days=$mask");
} else {
   $sth = $dbh->prepare(
   "select lpad(hex(device.mac),12,'0') as mac,
   if (rules.night<'12:00:00',
      date_format(convert_tz(concat_ws(' ',curdate(), rules.night),'$town','UTC'),'%Y-%m-%dT%T'),
      date_format(convert_tz(concat_ws(' ',curdate()-interval 1 day,rules.night),'$town','UTC'),'%Y-%m-%dT%T'))
   as start,
   date_format(convert_tz(concat_ws(' ',curdate(), rules.morning),'$town','UTC'),'%Y-%m-%dT%T')
   as stop
   from rules inner join device on rules.user_id=device.user_id
   where days=$mask");
}
$sth->execute();

while (my @row = $sth->fetchrow_array) {
   my ($mac, $start, $stop) = (@row);
   $mac = join(':',( lc($mac) =~ m/../g ));
   $tables .= "iptables -A FORWARD -m mac --mac-source $mac ";
   $tables .= "-m time --datestart $start --datestop $stop ";
   $tables .= "--utc " unless ($bork);
   $tables .= "-j REJECT\n";
   $tables .= "iptables -t nat -A PREROUTING -m mac --mac-source $mac ";
   $tables .= "-m time --datestart $start --datestop $stop ";
   $tables .= "--utc " unless ($bork);
   $tables .= "-p tcp ! -d $myip --dport 80 -j REDIRECT --to-ports 3128\n";
}

# And the ground rules
if ($bork) {
   $sth = $dbh->prepare(
   "select lpad(hex(device.mac),12,'0') as mac,
   date_format(start,'%Y-%m-%dT%T') as begin,
   date_format(end  ,'%Y-%m-%dT%T') as finish
   from device inner join ground on device.user_id=ground.user_id");
} else {
   $sth = $dbh->prepare(
   "select lpad(hex(device.mac),12,'0') as mac,
   date_format(convert_tz(start,'$town','UTC'),'%Y-%m-%dT%T') as begin,
   date_format(convert_tz(end,  '$town','UTC'),'%Y-%m-%dT%T') as finish
   from device inner join ground on device.user_id=ground.user_id");
}
$sth->execute();

while (my @row = $sth->fetchrow_array) {
   my ($mac, $start, $stop) = (@row);
   $mac = join(':',( lc($mac) =~ m/../g ));
   $tables .= "iptables -I FORWARD 1 -m mac --mac-source $mac ";
   $tables .= "-m time --datestart $start --datestop $stop ";
   $tables .= "--utc " unless ($bork);
   $tables .= "-j REJECT\n";
}

# Finally, the reward rules
if ($bork) {
   $sth = $dbh->prepare(
   "select lpad(hex(device.mac),12,'0') as mac,
   date_format(start,'%Y-%m-%dT%T') as begin,
   date_format(end  ,'%Y-%m-%dT%T') as finish
   from device inner join reward on device.user_id=reward.user_id");
} else {
   $sth = $dbh->prepare(
   "select lpad(hex(device.mac),12,'0') as mac,
   date_format(convert_tz(start,'$town','UTC'),'%Y-%m-%dT%T') as begin,
   date_format(convert_tz(end,  '$town','UTC'),'%Y-%m-%dT%T') as finish
   from device inner join reward on device.user_id=reward.user_id");
}
$sth->execute();

while (my @row = $sth->fetchrow_array) {
   my ($mac, $start, $stop) = (@row);
   $mac = join(':',( lc($mac) =~ m/../g ));
   $tables .= "iptables -I FORWARD 1 -m mac --mac-source $mac ";
   $tables .= "-m time --datestart $start --datestop $stop ";
   $tables .= "--utc " unless ($bork);
   $tables .= "-j ACCEPT\n";
   $tables .= "iptables -t nat -I PREROUTING 1 -m mac --mac-source $mac ";
   $tables .= "-m time --datestart $start --datestop $stop ";
   $tables .= "--utc " unless ($bork);
   $tables .= "-j ACCEPT\n";
}

# Run the new iptables commands
# and save them in sysconfig
system($tables);
system("iptables-save > /etc/sysconfig/iptables");
