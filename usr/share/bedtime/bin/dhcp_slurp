#!/usr/bin/perl

BEGIN {push @INC,'/usr/share/bedtime/bin'}

use BedtimeDB qw(dbconn get_val);
use LWP::Simple qw(get);
use DBI;
use warnings;
use strict;

# Connect to the database and get the leases file
my $dbh = dbconn;
my $lease_f = get_val('dhcp_leases');

# Read the leases file into @lease
open (LEASE,$lease_f);
my @lease = <LEASE>; close(LEASE);

# Make lease array one long string and split on lease
my @devs = split(/lease\s+/,join("\n",@lease));

# Get the devices from the database
my %devices;
my $sth = $dbh->prepare("select lpad(hex(mac),12,'0') as mac, inet_ntoa(ip) as ip from device");
$sth->execute;
while (my @row = $sth->fetchrow_array) {
   my ($mac,$ip) = (@row);
   $devices{$mac} = $ip unless exists($devices{$mac});
}

# See if there are any new devices
my %new;
foreach my $dev (@devs) {
   # only work on leases with a MAC in them
   if ($dev =~ m/hardware ethernet ([0-9a-fA-F]{2}:){5}([0-9a-fA-F]{2})/) {
      my $mac = $&;
      $mac =~ s/hardware ethernet\s+//;
      $mac =~ s/://g; $mac = uc($mac);
      # Find the IP
      $dev =~ m/^(\d{1,3}\.){3}(\d{1,3})/;
      my $ip = $&;
      # Add to the new hash if not in the database
      $new{$mac} = $ip unless exists($devices{$mac});
   }
}

while ((my $mac, my $ip)=each(%new)) {
   my $sth = $dbh->prepare("select count(*) from device where lpad(hex(mac),12,'0')=lpad('$mac',12,'0');") or die "Cannot prepare query: $dbh->errstr";
   my $res = $sth->execute or die "Cannot execute query: $sth->errstr";
   # API key is set to return pipe symbol delimiters (|)
   my $man = get("http://www.macvendorlookup.com/api/BTxGCNx/$mac");
   # Take out empty fields
   $man =~ s/(\|\s*)+\|/\|/g;
   my $sql = "replace into device set mac=x'$mac', ip=inet_aton('$ip'), manu='$man', first_seen=now();";
   $res = $sth->finish;
   $sth = $dbh->prepare($sql) or die "Cannot prepare query: $dbh->errstr";
   $res = $sth->execute or die "Cannot execute query: $sth->errstr";
}
