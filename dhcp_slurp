#!/usr/bin/perl

use DBI;
use strict;

open (CONF,'/etc/bedtime.conf') or die "Cannot open configuration file - $!\n";
# Read the conf file into an array and filter out all lines consisting of just white space and comments
my @conf = <CONF>; close CONF;
@conf = grep (!/^\s*$/,@conf);
@conf = grep (!/^#/,@conf);

# Read the remaining lines into a hash split on =
my %vals;
foreach (@conf) {
   chomp;
   my @pair = split(/\s*=\s*/);
   $vals{$pair[0]}=$pair[1];
}

# Collect the credentials and connect to the database
my $user = $vals{'dbuser'};
my $pass = $vals{'dbupass'};
my $dbis = "DBI:mysql:".$vals{'dbname'}.":".$vals{'dbhost'};
my $dbh = DBI->connect($dbis,$user,$pass) or die "Cannot connect to database $dbis with user $user - $!\n";


my $sth = $dbh->prepare("select value from settings where variable='dhcp_leases';") or die "Cannot prepare query: $dbh->errstr";
my $res = $sth->execute or die "Cannot execute query: $sth->errstr";
my $lease_f = $sth->fetchrow_array();
$res = $sth->finish;

open (LEASE,$lease_f);
my @lease = <LEASE>; close(LEASE);
my @devs = grep { $_ =~ /^\s*lease|^\s*hardware/} @lease;
my $devs = join("", @devs);
$devs =~ s/\s*{\s*\n\s*/###/g;
$devs =~ s/\s*lease\s*|\s*hardware ethernet\s*//g;
$devs =~ s/;/\n/g;
chomp($devs);
my @devs = split(/\n/,$devs);
foreach (@devs) {
   my @row = split(/###/);
   my $ip = $row[0]; my $mac = $row[1];
   $mac =~ s/://g; $mac = uc($mac);
   $sth = $dbh->prepare("select count(*) from device where lpad(hex(mac),12,'0')=lpad('$mac',12,'0');") or die "Cannot prepare query: $dbh->errstr";
   $res = $sth->execute or die "Cannot execute query: $sth->errstr";
   my $sql;
   if ($sth->fetchrow_array() > 0) {
      $sql = "update device set ip=inet_aton('$ip') where lpad(hex(mac),12,'0')=lpad('$mac',12,'0');";
   } else {
      $sql = "insert into device set mac=x'$mac', ip=inet_aton('$ip'), first_seen=now();";
   }
   $res = $sth->finish;
   $sth = $dbh->prepare($sql) or die "Cannot prepare query: $dbh->errstr";
   $res = $sth->execute or die "Cannot execute query: $sth->errstr";
#   print "$sql\n";
}
$dbh->disconnect;
